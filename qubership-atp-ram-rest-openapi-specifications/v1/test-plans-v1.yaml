openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  version: '1.0'
servers:
  - url: 'http://localhost:8080'
    description: Inferred Url
tags:
  - name: test-plans-controller
    description: Test Plans Controller
paths:
  /api/testplans/create:
    post:
      tags:
        - test-plans-controller
      summary: createTestPlan
      operationId: createTestPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlan'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: true
  /api/testplans/save:
    put:
      tags:
        - test-plans-controller
      summary: saveTestPlan
      operationId: saveTestPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlan'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: true
  '/api/testplans/{projectUuid}':
    get:
      tags:
        - test-plans-controller
      summary: getTestPlansByProjectUuid
      operationId: getTestPlansByProjectUuid
      parameters:
        - name: projectUuid
          in: path
          description: projectUuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestPlan'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/testplans/{testPlanUuid}/name':
    get:
      tags:
        - test-plans-controller
      summary: getTestPlanName
      operationId: getTestPlanName
      parameters:
        - name: testPlanUuid
          in: path
          description: testPlanUuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/testplans/{testPlanUuid}/recipients':
    get:
      tags:
        - test-plans-controller
      summary: getRecipients
      operationId: getRecipients
      parameters:
        - name: testPlanUuid
          in: path
          description: testPlanUuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailRecipients'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - test-plans-controller
      summary: setTestPlanRecipients
      operationId: setTestPlanRecipients
      parameters:
        - name: testPlanUuid
          in: path
          description: testPlanUuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailRecipients'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/testplans/{testPlanUuid}/testplanForNavigationPath':
    get:
      tags:
        - test-plans-controller
      summary: getTestPlan
      operationId: getTestPlan
      parameters:
        - name: testPlanUuid
          in: path
          description: testPlanUuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/testplans/search':
    post:
      tags:
        - test-plans-controller
      summary: search
      operationId: search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlansSearchRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestPlan'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    MailRecipients:
      title: MailRecipients
      type: object
      properties:
        recipients:
          uniqueItems: true
          type: array
          items:
            type: string
    TestPlan:
      title: TestPlan
      type: object
      properties:
        name:
          type: string
        projectId:
          type: string
          format: uuid
        recipients:
          $ref: '#/components/schemas/MailRecipients'
        uuid:
          type: string
          format: uuid
    TestPlansSearchRequest:
      title: TestPlansSearchRequest
      type: object
      properties:
        name:
          type: string
        projectId:
          type: string
          format: uuid