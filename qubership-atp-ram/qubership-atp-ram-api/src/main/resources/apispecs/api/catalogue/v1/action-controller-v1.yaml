openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  version: '1.0'
servers:
  - url: 'http://localhost:8080'
    description: Inferred Url
tags:
  - name: action-controller
    description: Action Controller
paths:
  /catalog/api/v1/actions:
    get:
      tags:
        - action-controller
      summary: getAll
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Action'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - action-controller
      summary: update
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Action'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/actions/action-update-process/refresh/{uuid}':
    post:
      tags:
        - action-controller
      summary: refreshActionsByProjectId
      operationId: refreshActionsByProjectId
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/actions/{uuid}':
    get:
      tags:
        - action-controller
      summary: getByUuid
      operationId: getByUuid
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Action'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    Action:
      title: Action
      type: object
      properties:
        annotations:
          type: array
          items:
            type: string
        comment:
          type: string
        commentedOut:
          type: boolean
        deprecated:
          type: boolean
        description:
          type: string
        engineType:
          type: string
          enum:
            - BV
            - EXECUTOR
            - ITFACTION
            - ITFCALLCHAIN
            - ITFWARMUP
            - NEWMAN_RUNNER
        name:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
        projectUuid:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - BV
            - COMPOUND
            - ITF
            - MIA
            - NEWMAN
            - R_B_M
            - REST
            - SQL
            - SSH
            - TECHNICAL
            - UI
        typeAction:
          type: string
        uuid:
          type: string
          format: uuid
    ActionParameter:
      title: ActionParameter
      type: object
      properties:
        complexParam:
          $ref: '#/components/schemas/ComplexActionParameter'
        name:
          type: string
        prefix:
          type: string
        value:
          type: string
    ComplexActionParameter:
      title: ComplexActionParameter
      type: object
      properties:
        arrayParams:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
        mapParams:
          type: array
          items:
            $ref: '#/components/schemas/MapActionParameter'
        type:
          type: string
          enum:
            - ARRAY
            - MAP
    MapActionParameter:
      title: MapActionParameter
      type: object
      properties:
        paramKey:
          $ref: '#/components/schemas/ActionParameter'
        paramValue:
          $ref: '#/components/schemas/ActionParameter'