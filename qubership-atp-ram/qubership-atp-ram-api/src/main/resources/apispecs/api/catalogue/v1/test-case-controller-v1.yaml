openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  version: '1.0'
servers:
  - url: 'http://localhost:8080'
    description: Inferred Url
tags:
  - name: test-case-controller
    description: Test Case Controller
paths:
  /catalog/api/v1/testcases:
    get:
      tags:
        - test-case-controller
      summary: getAll
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestCase'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - test-case-controller
      summary: create
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseCreationRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string
                  format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - test-case-controller
      summary: delete
      operationId: delete
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /catalog/api/v1/testcases/calculate-dependencies:
    post:
      tags:
        - test-case-controller
      summary: calculateDependencies
      operationId: calculateDependencies
      parameters:
        - name: dataSetId
          in: query
          description: dataSetId
          required: true
          style: form
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestCaseDependenciesResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcases/copy:
    post:
      tags:
        - test-case-controller
      summary: copyTestCases
      operationId: copyTestCases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcases/detailed:
    post:
      tags:
        - test-case-controller
      summary: getDetailedCases
      operationId: getDetailedCases
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestCaseResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcases/enriched:
    post:
      tags:
        - test-case-controller
      summary: getEnrichedCases
      operationId: getEnrichedCases
      parameters:
        - name: testscopeid
          in: query
          description: testscopeid
          required: false
          style: form
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnrichedCase'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcases/enriched/search:
    post:
      tags:
        - test-case-controller
      summary: searchEnrichedCases
      operationId: searchEnrichedCases
      parameters:
        - name: testscopeid
          in: query
          description: testscopeid
          required: false
          style: form
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseSearchRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnrichedCase'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcases/find-name-pagination:
    get:
      tags:
        - test-case-controller
      summary: getAllNamesByNameWithPagination
      operationId: getAllNamesByNameWithPagination
      parameters:
        - name: offset
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: pageNumber
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: paged
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: projectId
          in: query
          description: projectId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: sort.sorted
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: sort.unsorted
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: unpaged
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: testPlanId
          in: query
          description: testPlanId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          description: name
          required: true
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageAbstractEntityResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcases/labels:
    post:
      tags:
        - test-case-controller
      summary: addLabelsToTestCases
      operationId: addLabelsToTestCases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelsRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - test-case-controller
      summary: deleteLabelsFromTestCases
      operationId: deleteLabelsFromTestCases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelsRequest'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /catalog/api/v1/testcases/labels/search:
    post:
      tags:
        - test-case-controller
      summary: getCaseLabels
      operationId: getCaseLabels
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestCaseLabelResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcases/move:
    post:
      tags:
        - test-case-controller
      summary: moveTestCases
      operationId: moveTestCases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/project/{uuid}':
    get:
      tags:
        - test-case-controller
      summary: getTestCasesByProjectUuid
      operationId: getTestCasesByProjectUuid
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestCaseResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/search/DS/{uuid}':
    post:
      tags:
        - test-case-controller
      summary: getTestCasesByDsId
      operationId: getTestCasesByDsId
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: integer
                format: int32
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcases/search/by_ids:
    post:
      tags:
        - test-case-controller
      summary: getTestCasesByIds
      operationId: getTestCasesByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseSearchRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestCase'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcases/status-update:
    post:
      tags:
        - test-case-controller
      summary: updateCaseStatuses
      operationId: updateCaseStatuses
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TestCaseLastStatus'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/{uuid}':
    get:
      tags:
        - test-case-controller
      summary: getTestCaseWithLabelsByUuid
      operationId: getTestCaseWithLabelsByUuid
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestCase'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - test-case-controller
      summary: update
      operationId: update
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseUpdateRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    patch:
      tags:
        - test-case-controller
      summary: patch
      operationId: patch
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CasePatchUpdateRequest'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/catalog/api/v1/testcases/{uuid}/detailed':
    get:
      tags:
        - test-case-controller
      summary: getDetailedCase
      operationId: getDetailedCase
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestCaseResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/{uuid}/enriched':
    get:
      tags:
        - test-case-controller
      summary: getEnrichedCase
      operationId: getEnrichedCase
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: testscopeid
          in: query
          description: testscopeid
          required: false
          style: form
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/EnrichedCase'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/{uuid}/patch':
    put:
      tags:
        - test-case-controller
      summary: patchUpdate
      operationId: patchUpdate
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CasePatchUpdateRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: true
  '/catalog/api/v1/testcases/{uuid}/testscenario-id':
    get:
      tags:
        - test-case-controller
      summary: getScenarioIdByTestCaseId
      operationId: getScenarioIdByTestCaseId
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: string
                format: uuid
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/testscenarios/copy':
    get:
      tags:
        - test-case-controller
      summary: copyTestCasesWithScenarios
      operationId: copyTestCasesWithScenarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCasesCopyRequest'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/compare/copy':
    post:
      tags:
        - test-case-controller
      summary: copyTestCaseWhileTestPlansCompare
      operationId: copyTestCaseWhileTestPlansCompare
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompareItemCopyRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestCaseCompareCopyResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/compare/copy/bulk':
    post:
      tags:
        - test-case-controller
      summary: bulkCopyTestCasesWhileTestPlansCompare
      operationId: bulkCopyTestCasesWhileTestPlansCompare
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompareCopyRequest'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/dataSetLists/{dslId}/usages':
    get:
      tags:
        - test-case-controller
      summary: getDataSetListTestCasesUsages
      operationId: getDataSetListTestCasesUsages
      parameters:
        - name: dslId
          in: path
          description: data set list id
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: page number
          required: true
          style: form
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: size number
          required: true
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/datasets/{dslId}/usages':
    get:
      tags:
        - test-case-controller
      summary: getDataSetTestCasesUsages
      operationId: getDataSetTestCasesUsages
      parameters:
        - name: dslId
          in: path
          description: data set list id
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: page number
          required: true
          style: form
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: size number
          required: true
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/datasets/{dsId}/usages/count':
    get:
      tags:
        - test-case-controller
      summary: getDataSetTestCasesUsagesCount
      operationId: getDataSetTestCasesUsagesCount
      parameters:
        - name: dsId
          in: path
          description: data set id
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: integer
                format: int32
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/dataSetLists/{dslId}/usages/count':
    get:
      tags:
        - test-case-controller
      summary: getDataSetListTestCasesUsagesCount
      operationId: getDataSetListTestCasesUsagesCount
      parameters:
        - name: dslId
          in: path
          description: data set list id
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: integer
                format: int32
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/dataset/replace':
    post:
      tags:
        - test-case-controller
      summary: replaceTestCasesDataset
      operationId: replaceTestCasesDataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCasesDataSetReplaceRequest'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/datasets/set':
    post:
      tags:
        - test-case-controller
      summary: setTestCaseDatasets
      operationId: setTestCaseDatasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseDatasetsSetRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/datasets/compare':
    post:
      tags:
        - test-case-controller
      summary: compareTestCasesDatasets
      operationId: compareTestCasesDatasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompareTestCasesDatasetsRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CompareTestCasesDatasetsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/search':
    post:
      tags:
        - test-case-controller
      summary: search test cases
      operationId: search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseSearchRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCase'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/components/search':
    post:
      tags:
        - test-case-controller
      summary: search test case components
      operationId: getTestCaseComponents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseComponentsSearchRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JiraComponent'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/components/set':
    post:
      tags:
        - test-case-controller
      summary: set test case components
      operationId: setTestCaseComponents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseComponentsSetRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcases/components':
    delete:
      tags:
        - test-case-controller
      summary: delete test case components
      operationId: deleteTestCaseComponents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseComponentsDeleteRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseComponentsDeleteResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    AbstractEntityResponse:
      title: AbstractEntityResponse
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    ActionEntity:
      title: ActionEntity
      type: object
      properties:
        engineType:
          type: string
          enum:
            - BV
            - EXECUTOR
            - ITFACTION
            - ITFCALLCHAIN
            - ITFWARMUP
            - NEWMAN_RUNNER
        id:
          type: string
          format: uuid
        name:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
        type:
          type: string
          enum:
            - BV
            - COMPOUND
            - ITF
            - MIA
            - NEWMAN
            - R_B_M
            - REST
            - SQL
            - SSH
            - TECHNICAL
            - UI
    ActionParameter:
      title: ActionParameter
      type: object
      properties:
        complexParam:
          $ref: '#/components/schemas/ComplexActionParameter'
        name:
          type: string
        prefix:
          type: string
        value:
          type: string
    CaseCreationRequest:
      title: CaseCreationRequest
      required:
        - dataSets
        - name
        - projectId
        - scenarioIds
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/JiraComponent'
        dataSets:
          type: array
          items:
            $ref: '#/components/schemas/CaseDataSetRequest'
        groupId:
          type: string
          format: uuid
        jiraTicket:
          pattern: '((?<!([A-Z]{1,10})-?)[A-Z]+-\d+)'
          type: string
        labelIds:
          type: array
          items:
            type: string
            format: uuid
        name:
          type: string
        projectId:
          type: string
          format: uuid
        scenarioIds:
          type: array
          items:
            type: string
            format: uuid
        testPlanUuid:
          type: string
          format: uuid
        logCollectorTemplateId:
          type: string
          format: uuid
    CaseDataSetRequest:
      title: CaseDataSetRequest
      type: object
      properties:
        dataSetId:
          type: string
          format: uuid
        dataSetListId:
          type: string
          format: uuid
        dataSetName:
          type: string
    CasePatchUpdateRequest:
      title: CasePatchUpdateRequest
      type: object
      properties:
        assigneeId:
          type: string
          format: uuid
        components:
          type: array
          items:
            $ref: '#/components/schemas/JiraComponent'
        datasetId:
          type: string
          format: uuid
        datasetStorageId:
          type: string
          format: uuid
        description:
          type: string
        labelIds:
          type: array
          items:
            type: string
            format: uuid
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        priority:
          type: string
          enum:
            - BLOCKER
            - CRITICAL
            - LOW
            - MAJOR
            - NORMAL
        scenarioId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - BLOCKED
            - CANCELLED
            - FAILED
            - IN_PROGRESS
            - NOT_DELIVERED
            - OPEN
            - PASSED
            - PASSED_WITH_MINOR_DEFECTS
        testScopeIds:
          type: array
          items:
            type: string
            format: uuid
    CaseSearchRequest:
      title: CaseSearchRequest
      type: object
      properties:
        groupId:
          type: string
          format: uuid
        labelId:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        uuids:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    CaseUpdateRequest:
      title: CaseUpdateRequest
      required:
        - datasetId
        - datasetStorageId
        - description
        - name
        - scenarioId
      type: object
      properties:
        assigneeId:
          type: string
          format: uuid
        components:
          type: array
          items:
            $ref: '#/components/schemas/JiraComponent'
        datasetId:
          type: string
          format: uuid
        datasetStorageId:
          type: string
          format: uuid
        description:
          type: string
        jiraTicket:
          pattern: '((?<!([A-Z]{1,10})-?)[A-Z]+-\d+)'
          type: string
        labelIds:
          type: array
          items:
            type: string
            format: uuid
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        priority:
          type: string
          enum:
            - BLOCKER
            - CRITICAL
            - LOW
            - MAJOR
            - NORMAL
        scenarioId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - BLOCKED
            - CANCELLED
            - FAILED
            - IN_PROGRESS
            - NOT_DELIVERED
            - OPEN
            - PASSED
            - PASSED_WITH_MINOR_DEFECTS
        testScopeIds:
          type: array
          items:
            type: string
            format: uuid
        logCollectorTemplateId:
          type: string
          format: uuid
    ComplexActionParameter:
      title: ComplexActionParameter
      type: object
      properties:
        arrayParams:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
        mapParams:
          type: array
          items:
            $ref: '#/components/schemas/MapActionParameter'
        type:
          type: string
          enum:
            - ARRAY
            - MAP
    CopyRequest:
      title: CopyRequest
      required:
        - items
        - testPlanId
      type: object
      properties:
        items:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        testPlanId:
          type: string
          format: uuid
        toGroup:
          type: string
          format: uuid
    Directive:
      title: Directive
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
    EnrichedCase:
      title: EnrichedCase
      required:
        - name
      type: object
      properties:
        compounds:
          type: array
          items:
            $ref: '#/components/schemas/EnrichedCompound'
        context:
          $ref: '#/components/schemas/TestCaseContext'
        dataSetId:
          type: string
          format: uuid
        dataSetStorageId:
          type: string
          format: uuid
        dependsOn:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseDependency'
        flags:
          type: array
          items:
            type: string
            enum:
              - COLLECT_LOGS
              - COLLECT_LOGS_ON_FAIL
              - COLLECT_LOGS_ON_SKIPPED
              - COLLECT_LOGS_ON_WARNING
              - DO_NOT_PASS_INITIAL_CONTEXT
              - EXECUTE_ANYWAY
              - FAIL_IMMEDIATELY
              - IGNORE_PREREQUISITE_IN_PASS_RATE
              - IGNORE_VALIDATION_IN_PASS_RATE
              - INVERT_RESULT
              - SKIP
              - SKIP_IF_DEPENDENCIES_FAIL
              - STOP_ON_FAIL
              - SKIP_ON_PASS
              - TERMINATE_IF_FAIL
              - TERMINATE_IF_PREREQUISITE_FAIL
              - COLLECT_SSM_METRICS_ON_FAIL
        id:
          type: string
          format: uuid
        initialTestRunId:
          type: string
          format: uuid
        isIgnored:
          type: boolean
        lineNumber:
          type: integer
          format: int32
        logCollectorRequest:
          $ref: '#/components/schemas/LogCollectorRequest'
        name:
          type: string
        parentId:
          type: string
          format: uuid
        scenarioHashSum:
          type: string
        testCaseRepeatCounts:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseRepeatCount'
        testScenarioName:
          type: string
    EnrichedCompound:
      title: EnrichedCompound
      required:
        - content
      type: object
      properties:
        childCompounds:
          type: array
          items:
            $ref: '#/components/schemas/EnrichedCompound'
        comment:
          type: string
        content:
          type: string
        deprecated:
          type: boolean
        directives:
          type: array
          items:
            $ref: '#/components/schemas/Directive'
        entity:
          $ref: '#/components/schemas/ActionEntity'
        flags:
          type: array
          items:
            type: string
            enum:
              - COLLECT_LOGS
              - COLLECT_LOGS_ON_FAIL
              - COLLECT_LOGS_ON_SKIPPED
              - COLLECT_LOGS_ON_WARNING
              - DO_NOT_PASS_INITIAL_CONTEXT
              - EXECUTE_ANYWAY
              - FAIL_IMMEDIATELY
              - IGNORE_PREREQUISITE_IN_PASS_RATE
              - IGNORE_VALIDATION_IN_PASS_RATE
              - INVERT_RESULT
              - SKIP
              - SKIP_IF_DEPENDENCIES_FAIL
              - STOP_ON_FAIL
              - SKIP_ON_PASS
              - TERMINATE_IF_FAIL
              - TERMINATE_IF_PREREQUISITE_FAIL
              - COLLECT_SSM_METRICS_ON_FAIL
        hidden:
          type: boolean
        id:
          type: string
          format: uuid
        lineNumber:
          type: integer
          format: int32
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
        scenarioHashSum:
          type: string
        systemId:
          type: string
          format: uuid
        timeout:
          type: integer
          format: int32
        type:
          type: string
          enum:
            - BV
            - COMPOUND
            - ITF
            - MIA
            - NEWMAN
            - R_B_M
            - REST
            - SQL
            - SSH
            - TECHNICAL
            - UI
    JiraComponent:
      title: JiraComponent
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Label:
      title: Label
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        projectId:
          type: string
          format: uuid
        testPlanId:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
    LabelsRequest:
      title: LabelsRequest
      type: object
      properties:
        labels:
          type: array
          items:
            type: string
            format: uuid
        testcases:
          type: array
          items:
            type: string
            format: uuid
    LogCollectorRequest:
      title: LogCollectorRequest
      type: object
      properties:
        body:
          type: string
        endpoint:
          type: string
        resultJsonPath:
          type: string
    MapActionParameter:
      title: MapActionParameter
      type: object
      properties:
        paramKey:
          $ref: '#/components/schemas/ActionParameter'
        paramValue:
          $ref: '#/components/schemas/ActionParameter'
    MetaInfo:
      title: MetaInfo
      type: object
      properties:
        otherTextValue:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
        stepId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - ACTION
            - COMPOUND
            - DIRECTIVE
            - FLAG
            - OTHER
    MoveRequest:
      title: MoveRequest
      required:
        - items
      type: object
      properties:
        items:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        toGroup:
          type: string
          format: uuid
    Pageable:
      title: Pageable
      type: object
      properties:
        offset:
          type: integer
          format: int64
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        sort:
          $ref: '#/components/schemas/Sort'
        unpaged:
          type: boolean
    PageAbstractEntityResponse:
      title: PageAbstractEntityResponse
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/AbstractEntityResponse'
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    ResponseEntity:
      title: ResponseEntity
      type: object
      properties:
        body:
          type: object
        statusCode:
          type: string
          enum:
            - ACCEPTED
            - ALREADY_REPORTED
            - BAD_GATEWAY
            - BAD_REQUEST
            - BANDWIDTH_LIMIT_EXCEEDED
            - CHECKPOINT
            - CONFLICT
            - CONTINUE
            - CREATED
            - DESTINATION_LOCKED
            - EXPECTATION_FAILED
            - FAILED_DEPENDENCY
            - FORBIDDEN
            - FOUND
            - GATEWAY_TIMEOUT
            - GONE
            - HTTP_VERSION_NOT_SUPPORTED
            - IM_USED
            - INSUFFICIENT_SPACE_ON_RESOURCE
            - INSUFFICIENT_STORAGE
            - INTERNAL_SERVER_ERROR
            - I_AM_A_TEAPOT
            - LENGTH_REQUIRED
            - LOCKED
            - LOOP_DETECTED
            - METHOD_FAILURE
            - METHOD_NOT_ALLOWED
            - MOVED_PERMANENTLY
            - MOVED_TEMPORARILY
            - MULTIPLE_CHOICES
            - MULTI_STATUS
            - NETWORK_AUTHENTICATION_REQUIRED
            - NON_AUTHORITATIVE_INFORMATION
            - NOT_ACCEPTABLE
            - NOT_EXTENDED
            - NOT_FOUND
            - NOT_IMPLEMENTED
            - NOT_MODIFIED
            - NO_CONTENT
            - OK
            - PARTIAL_CONTENT
            - PAYLOAD_TOO_LARGE
            - PAYMENT_REQUIRED
            - PERMANENT_REDIRECT
            - PRECONDITION_FAILED
            - PRECONDITION_REQUIRED
            - PROCESSING
            - PROXY_AUTHENTICATION_REQUIRED
            - REQUESTED_RANGE_NOT_SATISFIABLE
            - REQUEST_ENTITY_TOO_LARGE
            - REQUEST_HEADER_FIELDS_TOO_LARGE
            - REQUEST_TIMEOUT
            - REQUEST_URI_TOO_LONG
            - RESET_CONTENT
            - SEE_OTHER
            - SERVICE_UNAVAILABLE
            - SWITCHING_PROTOCOLS
            - TEMPORARY_REDIRECT
            - TOO_EARLY
            - TOO_MANY_REQUESTS
            - UNAUTHORIZED
            - UNAVAILABLE_FOR_LEGAL_REASONS
            - UNPROCESSABLE_ENTITY
            - UNSUPPORTED_MEDIA_TYPE
            - UPGRADE_REQUIRED
            - URI_TOO_LONG
            - USE_PROXY
            - VARIANT_ALSO_NEGOTIATES
        statusCodeValue:
          type: integer
          format: int32
    Sort:
      title: Sort
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    TestCase:
      title: TestCase
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/UserInfo'
        components:
          type: array
          items:
            $ref: '#/components/schemas/JiraComponent'
        createdBy:
          $ref: '#/components/schemas/UserInfo'
        createdWhen:
          type: string
          format: date-time
        datasetStorageUuid:
          type: string
          format: uuid
        datasetUuid:
          type: string
          format: uuid
        dependsOn:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseDependency'
        description:
          type: string
        flags:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseFlags'
        groupId:
          type: string
          format: uuid
        jiraTicket:
          type: string
        labelIds:
          type: array
          items:
            type: string
            format: uuid
        lastRun:
          type: string
          format: uuid
        lastRunStatus:
          type: string
        modifiedBy:
          $ref: '#/components/schemas/UserInfo'
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        order:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseOrder'
        priority:
          type: string
          enum:
            - BLOCKER
            - CRITICAL
            - LOW
            - MAJOR
            - NORMAL
        projectUuid:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - BLOCKED
            - CANCELLED
            - FAILED
            - IN_PROGRESS
            - NOT_DELIVERED
            - OPEN
            - PASSED
            - PASSED_WITH_MINOR_DEFECTS
        testCaseRepeatCounts:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseRepeatCount'
        testPlanUuid:
          type: string
          format: uuid
        testScenarioUuid:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
        logCollectorTemplateId:
          type: string
          format: uuid
    TestCaseContext:
      title: TestCaseContext
      type: object
      properties:
        datasetListId:
          type: string
          format: uuid
        fullContext:
          type: object
        iterationContext:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
    TestCaseDependency:
      title: TestCaseDependency
      type: object
      properties:
        testCaseId:
          type: string
          format: uuid
        testScopeId:
          type: string
          format: uuid
    TestCaseFlags:
      title: TestCaseFlags
      type: object
      properties:
        flags:
          type: array
          items:
            type: string
            enum:
              - COLLECT_LOGS
              - COLLECT_LOGS_ON_FAIL
              - COLLECT_LOGS_ON_SKIPPED
              - COLLECT_LOGS_ON_WARNING
              - DO_NOT_PASS_INITIAL_CONTEXT
              - EXECUTE_ANYWAY
              - FAIL_IMMEDIATELY
              - IGNORE_PREREQUISITE_IN_PASS_RATE
              - IGNORE_VALIDATION_IN_PASS_RATE
              - INVERT_RESULT
              - SKIP
              - SKIP_IF_DEPENDENCIES_FAIL
              - STOP_ON_FAIL
              - SKIP_ON_PASS
              - TERMINATE_IF_FAIL
              - TERMINATE_IF_PREREQUISITE_FAIL
              - COLLECT_SSM_METRICS_ON_FAIL
        testScopeId:
          type: string
          format: uuid
    TestCaseLabelResponse:
      title: TestCaseLabelResponse
      type: object
      properties:
        description:
          type: string
        jiraTicket:
          type: string
        components:
          type: array
          items:
            $ref: '#/components/schemas/JiraComponent'
        labels:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Label'
        name:
          type: string
        projectId:
          type: string
          format: uuid
        scenarioId:
          type: string
          format: uuid
        testPlanId:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
    TestCaseLastStatus:
      title: TestCaseLastStatus
      type: object
      properties:
        status:
          type: string
        testCaseId:
          type: string
    TestCaseOrder:
      title: TestCaseOrder
      type: object
      properties:
        sequenceNumber:
          type: integer
          format: int32
        testScopeId:
          type: string
          format: uuid
    TestCaseRepeatCount:
      title: TestCaseRepeatCount
      type: object
      properties:
        repeatCount:
          type: integer
          format: int32
        testScopeId:
          type: string
          format: uuid
    TestCaseResponse:
      title: TestCaseResponse
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/UserInfo'
        createDate:
          type: integer
          format: int64
        createdBy:
          $ref: '#/components/schemas/UserModel'
        dataset:
          $ref: '#/components/schemas/AbstractEntityResponse'
        datasetName:
          type: string
        datasetStorageUuid:
          type: string
          format: uuid
        datasetUuid:
          type: string
          format: uuid
        dependsOn:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseDependency'
        description:
          type: string
        flagIds:
          type: array
          items:
            type: string
            format: uuid
        groupId:
          type: string
          format: uuid
        jiraTicketUrl:
          type: string
        labels:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Label'
        lastModifiedBy:
          $ref: '#/components/schemas/UserModel'
        lastRun:
          type: string
          format: uuid
        lastRunStatus:
          type: string
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        priority:
          type: string
          enum:
            - BLOCKER
            - CRITICAL
            - LOW
            - MAJOR
            - NORMAL
        projectUuid:
          type: string
          format: uuid
        sequenceNumber:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - BLOCKED
            - CANCELLED
            - FAILED
            - IN_PROGRESS
            - NOT_DELIVERED
            - OPEN
            - PASSED
            - PASSED_WITH_MINOR_DEFECTS
        testCaseRepeatCounts:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseRepeatCount'
        testPlanUuid:
          type: string
          format: uuid
        testScenario:
          $ref: '#/components/schemas/TestScenario'
        testScopes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TestScope'
        uuid:
          type: string
          format: uuid
    TestScenario:
      title: TestScenario
      type: object
      properties:
        alsoCompound:
          type: boolean
        createdBy:
          $ref: '#/components/schemas/UserInfo'
        createdWhen:
          type: string
          format: date-time
        description:
          type: string
        groupUuid:
          type: string
          format: uuid
        lastEdit:
          type: integer
          format: int64
        metainfo:
          type: array
          items:
            $ref: '#/components/schemas/MetaInfo'
        modifiedBy:
          $ref: '#/components/schemas/UserInfo'
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        projectUuid:
          type: string
          format: uuid
        testPlanUuid:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - COMPOUND
            - TESTSCENARIO
        uuid:
          type: string
          format: uuid
    TestScope:
      title: TestScope
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/UserInfo'
        createdWhen:
          type: string
          format: date-time
        description:
          type: string
        environmentUuid:
          type: string
          format: uuid
        executionCases:
          type: array
          items:
            type: string
            format: uuid
        flags:
          type: array
          items:
            type: string
            enum:
              - COLLECT_LOGS
              - COLLECT_LOGS_ON_FAIL
              - COLLECT_LOGS_ON_SKIPPED
              - COLLECT_LOGS_ON_WARNING
              - DO_NOT_PASS_INITIAL_CONTEXT
              - EXECUTE_ANYWAY
              - FAIL_IMMEDIATELY
              - IGNORE_PREREQUISITE_IN_PASS_RATE
              - IGNORE_VALIDATION_IN_PASS_RATE
              - INVERT_RESULT
              - SKIP
              - SKIP_IF_DEPENDENCIES_FAIL
              - STOP_ON_FAIL
              - SKIP_ON_PASS
              - TERMINATE_IF_FAIL
              - TERMINATE_IF_PREREQUISITE_FAIL
              - COLLECT_SSM_METRICS_ON_FAIL
        groupUuid:
          type: string
          format: uuid
        modifiedBy:
          $ref: '#/components/schemas/UserInfo'
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        numberOfThreshold:
          type: integer
          format: int32
        prerequisitesCases:
          type: array
          items:
            type: string
            format: uuid
        projectUuid:
          type: string
          format: uuid
        solutionBuild:
          type: array
          items:
            type: string
        systemUnderTestHost:
          type: array
          items:
            type: string
        taToolsUuid:
          type: string
          format: uuid
        testPlanUuid:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
        validationCases:
          type: array
          items:
            type: string
            format: uuid
        widgetConfigTemplateId:
          type: string
          format: uuid
    UserInfo:
      title: UserInfo
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
    UserModel:
      title: UserModel
      type: object
      properties:
        firstName:
          type: string
        id:
          type: string
        lastName:
          type: string
    TestCaseDependenciesResponse:
      title: TestCaseDependenciesResponse
      type: object
      properties:
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/DependencyCount'
    DependencyCount:
      title: DependencyCount
      type: object
      properties:
        id:
          type: string
          format: uuid
        count:
          type: integer
          format: int32
    CompareCopyRequest:
      title: CompareCopyRequest
      type: object
      properties:
        sourceParentId:
          type: string
          format: uuid
        targetParentId:
          type: string
          format: uuid
    TestCaseCompareCopyResponse:
      title: TestCaseCompareCopyResponse
      type: object
      properties:
        targetTestCaseId:
          type: string
          format: uuid
        targetScenarioId:
          type: string
          format: uuid
    PaginationResponse:
      title: PaginationResponse
      required:
        - entities
        - totalCount
      type: object
      properties:
        entities:
          type: array
          items:
            type: object
        totalCount:
          type: integer
          format: int32
    TestCasesDataSetReplaceRequest:
      title: TestCasesDataSetReplaceRequest
      required:
        - newDataset
        - dataSetListId
      type: object
      properties:
        dataSetListId:
          type: string
          format: uuid
        newDataset:
          type: string
          format: uuid
    TestCaseDatasetsSetRequest:
      title: TestCaseDatasetsSetRequest
      type: object
      properties:
        folderIds:
          type: array
          items:
            type: string
            format: uuid
        testCaseIds:
          type: array
          items:
            type: string
            format: uuid
        datasetId:
          type: string
          format: uuid
        datasetListId:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
    TestCasesCopyRequest:
      title: TestCasesCopyRequest
      type: object
      properties:
        sourceTestPlanId:
          type: string
          format: uuid
        targetTestPlanId:
          type: string
          format: uuid
        targetScenarioFolderId:
          type: string
          format: uuid
        targetCaseFolderId:
          type: string
          format: uuid
        testCaseIds:
          type: array
          items:
            type: string
        testCaseFolderIds:
          type: array
          items:
            type: string
        compounds:
          type: array
          items:
            $ref: '#/components/schemas/CompoundCopyItem'
        copyCompounds:
          type: boolean
        copyDatasets:
          type: boolean
        setPostfix:
          type: boolean
        postfix:
          type: string
    CompareItemCopyRequest:
      title: CompareItemCopyRequest
      type: object
      properties:
        sourceParentId:
          type: string
          format: uuid
        targetParentId:
          type: string
          format: uuid
        itemId:
          type: string
          format: uuid
    CompoundCopyItem:
      title: CompoundCopyItem
      type: object
      properties:
        id:
          type: string
          format: uuid
        copyOption:
          type: string
          enum:
            - COPY
            - OVERWRITE
    CompareTestCasesDatasetsRequest:
      title: CompareTestCasesDatasetsRequest
      type: object
      properties:
        leftTestCaseId:
          type: string
          format: uuid
        rightTestCaseId:
          type: string
          format: uuid
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    CompareTestCasesDatasetsResponse:
      title: CompareTestCasesDatasetsRequest
      type: object
      properties:
        leftTestPlanId:
          type: string
          format: uuid
        leftTestPlanName:
          type: string
        leftDatasetId:
          type: string
          format: uuid
        leftDatasetName:
          type: string
        leftDslName:
          type: string
        rightTestPlanId:
          type: string
          format: uuid
        rightTestPlanName:
          type: string
        rightDatasetId:
          type: string
          format: uuid
        rightDatasetName:
          type: string
        rightDslName:
          type: string
        testCaseName:
          type: string
        total:
          type: integer
          format: int32
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ComparedAttribute'
    ComparedAttribute:
      title: Compared attributes
      type: object
      properties:
        leftAttributeId:
          type: string
          format: uuid
        leftAttributeValue:
          type: object
        leftAttributeType:
          $ref: '#/components/schemas/AttributeType'
        rightAttributeId:
          type: string
          format: uuid
        rightAttributeValue:
          type: object
        rightAttributeType:
          $ref: '#/components/schemas/AttributeType'
        attributeName:
          type: string
        status:
          $ref: '#/components/schemas/DetailedComparisonStatus'
    AttributeType:
      type: string
      enum:
        - CHANGE
        - DSL
        - ENCRYPTED
        - FILE
        - LIST
        - TEXT
    DetailedComparisonStatus:
      type: string
      enum:
        - EQUAL
        - NOT EQUAL
        - INCOMPATIBLE TYPES
    TestCaseSearchRequest:
      properties:
        projectId:
          type: string
          format: uuid
        groupIds:
          type: array
          items:
            type: string
            format: uuid
        ids:
          type: array
          items:
            type: string
            format: uuid
    TestCaseComponentsSearchRequest:
      properties:
        projectId:
          type: string
          format: uuid
        testCaseIds:
          type: array
          items:
            type: string
            format: uuid
    TestCaseComponentsSetRequest:
      properties:
        projectId:
          type: string
          format: uuid
        testCaseIds:
          type: array
          items:
            type: string
            format: uuid
        components:
          type: array
          items:
            $ref: '#/components/schemas/JiraComponent'
    TestCaseComponentsDeleteRequest:
      properties:
        projectId:
          type: string
          format: uuid
        testCaseIds:
          type: array
          items:
            type: string
            format: uuid
        components:
          type: array
          items:
            $ref: '#/components/schemas/JiraComponent'
    TestCaseComponentsDeleteResponse:
      properties:
        successCases:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseComponentsDeleteResponse.Item'
        failedCases:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseComponentsDeleteResponse.Item'
    TestCaseComponentsDeleteResponse.Item:
      properties:
        name:
          type: string