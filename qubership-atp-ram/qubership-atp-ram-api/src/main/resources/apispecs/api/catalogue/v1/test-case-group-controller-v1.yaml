openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  version: '1.0'
servers:
  - url: 'http://localhost:8080'
    description: Inferred Url
tags:
  - name: test-case-group-controller
    description: Test Case Group Controller
paths:
  /catalog/api/v1/testcasegroups:
    post:
      tags:
        - test-case-group-controller
      summary: create
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseGroup'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: string
                format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - test-case-group-controller
      summary: delete
      operationId: delete
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /catalog/api/v1/testcasegroups/copy:
    post:
      tags:
        - test-case-group-controller
      summary: copyTestCaseGroups
      operationId: copyTestCaseGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCopyRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcasegroups/move:
    post:
      tags:
        - test-case-group-controller
      summary: moveTestCaseGroups
      operationId: moveTestCaseGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMoveRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcasegroups/testcases:
    get:
      tags:
        - test-case-group-controller
      summary: getAllWithTestCases
      operationId: getAllWithTestCases
      parameters:
        - name: projectId
          in: query
          description: projectId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: testPlanId
          in: query
          description: testPlanId
          required: false
          style: form
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestCaseGroupResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - test-case-group-controller
      summary: deleteTestCasesAndGroups
      operationId: deleteTestCasesAndGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsItemsDeleteRequest'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /catalog/api/v1/testcasegroups/testcases/copy:
    post:
      tags:
        - test-case-group-controller
      summary: copyTestCasesAndGroups
      operationId: copyTestCasesAndGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsItemsRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcasegroups/testcases/count:
    get:
      tags:
        - test-case-group-controller
      summary: getCountTestCaseGroupsWithTestCases
      operationId: getCountTestCaseGroupsWithTestCases
      parameters:
        - name: projectId
          in: query
          description: projectId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: testPlanId
          in: query
          description: testPlanId
          required: false
          style: form
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: integer
                format: int64
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcasegroups/testcases/filtering:
    post:
      tags:
        - test-case-group-controller
      summary: getAllWithTestCasesFiltering
      operationId: getAllWithTestCasesFiltering
      parameters:
        - name: offset
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: pageNumber
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: paged
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: projectId
          in: query
          description: projectId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: sort.sorted
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: sort.unsorted
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: unpaged
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: testPlanId
          in: query
          description: testPlanId
          required: false
          style: form
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTestCaseFilteringRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestCaseGroupResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcasegroups/cases_by_groupId/filtering:
    post:
      tags:
        - test-case-group-controller
      summary: getParentGroupWithTestCasesFiltering
      operationId: getParentGroupWithTestCasesFiltering
      parameters:
        - name: offset
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: pageNumber
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: paged
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: projectId
          in: query
          description: projectId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: sort.sorted
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: sort.unsorted
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: unpaged
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: testPlanId
          in: query
          description: testPlanId
          required: false
          style: form
          schema:
            type: string
            format: uuid
        - name: groupId
          in: query
          description: groupId
          required: true
          style: form
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTestCaseFilteringRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestCaseGroups'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcasegroups/testcases/filtering/count:
    post:
      tags:
        - test-case-group-controller
      summary: getCountTestCaseGroupsWithTestCasesByFilter
      operationId: getCountTestCaseGroupsWithTestCasesByFilter
      parameters:
        - name: projectId
          in: query
          description: projectId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: testPlanId
          in: query
          description: testPlanId
          required: false
          style: form
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTestCaseFilteringRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: integer
                format: int64
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcasegroups/testcases/move:
    post:
      tags:
        - test-case-group-controller
      summary: moveTestCasesAndGroups
      operationId: moveTestCasesAndGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsItemsRequest'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testcasegroups/testcases/not-in-scope:
    get:
      tags:
        - test-case-group-controller
      summary: getAllWithTestCasesNotInScopeByProjectId
      operationId: getAllWithTestCasesNotInScopeByProjectId
      parameters:
        - name: projectId
          in: query
          description: projectId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: testPlanId
          in: query
          description: testPlanId
          required: false
          style: form
          schema:
            type: string
            format: uuid
        - name: scopeId
          in: query
          description: scopeId
          required: true
          style: form
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestCaseGroupResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcasegroups/testcases/start-index/{startIndex}/end-index/{endIndex}':
    get:
      tags:
        - test-case-group-controller
      summary: getAllWithTestCasesPaging
      operationId: getAllWithTestCasesPaging
      parameters:
        - name: projectId
          in: query
          description: projectId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: testPlanId
          in: query
          description: testPlanId
          required: false
          style: form
          schema:
            type: string
            format: uuid
        - name: startIndex
          in: path
          description: startIndex
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: endIndex
          in: path
          description: endIndex
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestCaseGroupResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcasegroups/{uuid}':
    put:
      tags:
        - test-case-group-controller
      summary: update
      operationId: update
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseGroup'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testcasegroups/{uuid}/rename':
    patch:
      tags:
        - test-case-group-controller
      summary: rename
      operationId: rename
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseGroupPatchRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestCaseGroup'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/catalog/api/v1/testcasegroups/tree':
    get:
      tags:
        - test-case-group-controller
      summary: getTestCaseGroupTree
      operationId: getTestCaseGroupTree
      parameters:
        - name: testPlanId
          in: query
          description: testPlanId
          required: true
          style: form
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/GroupTreeResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    AbstractEntityResponse:
      title: AbstractEntityResponse
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    ActionParameter:
      title: ActionParameter
      type: object
      properties:
        complexParam:
          $ref: '#/components/schemas/ComplexActionParameter'
        name:
          type: string
        prefix:
          type: string
        value:
          type: string
    ComplexActionParameter:
      title: ComplexActionParameter
      type: object
      properties:
        arrayParams:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
        mapParams:
          type: array
          items:
            $ref: '#/components/schemas/MapActionParameter'
        type:
          type: string
          enum:
            - ARRAY
            - MAP
    GetTestCaseFilteringRequest:
      title: GetTestCaseFilteringRequest
      type: object
      properties:
        datasets:
          type: array
          items:
            type: string
            format: uuid
        labelIds:
          type: array
          items:
            type: string
            format: uuid
        withoutLabels:
          type: boolean
        names:
          type: array
          items:
            type: string
        priorities:
          type: array
          items:
            type: string
            enum:
              - BLOCKER
              - CRITICAL
              - LOW
              - MAJOR
              - NORMAL
        scenarioIds:
          type: array
          items:
            type: string
            format: uuid
        scenarioNames:
          type: array
          items:
            type: string
        scopes:
          type: array
          items:
            type: string
            format: uuid
        withoutScope:
          type: boolean
        testCaseGroupIds:
          type: array
          items:
            type: string
            format: uuid
        lastRunStatuses:
          type: array
          items:
            type: string
            enum:
              - PASSED
              - FAILED
              - WARNING
              - STOPPED
              - SKIPPED
              - BLOCKED
              - UNKNOWN
              - NOT_STARTED
    GroupCopyRequest:
      title: GroupCopyRequest
      required:
        - groups
        - testPlanId
      type: object
      properties:
        groups:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        testPlanId:
          type: string
          format: uuid
        toGroup:
          type: string
          format: uuid
    GroupMoveRequest:
      title: GroupMoveRequest
      required:
        - groups
      type: object
      properties:
        groups:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        toGroup:
          type: string
          format: uuid
    GroupsItemsDeleteRequest:
      title: GroupsItemsDeleteRequest
      required:
        - groups
        - items
      type: object
      properties:
        groups:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        items:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    GroupsItemsRequest:
      title: GroupsItemsRequest
      required:
        - groups
        - items
        - testPlanId
      type: object
      properties:
        groups:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        items:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        testPlanId:
          type: string
          format: uuid
        toGroup:
          type: string
          format: uuid
    JiraComponent:
      title: JiraComponent
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Label:
      title: Label
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        projectId:
          type: string
          format: uuid
        testPlanId:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
    MapActionParameter:
      title: MapActionParameter
      type: object
      properties:
        paramKey:
          $ref: '#/components/schemas/ActionParameter'
        paramValue:
          $ref: '#/components/schemas/ActionParameter'
    MetaInfo:
      title: MetaInfo
      type: object
      properties:
        otherTextValue:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
        stepId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - ACTION
            - COMPOUND
            - DIRECTIVE
            - FLAG
            - OTHER
    ObjectOperation:
      title: ObjectOperation
      type: object
      properties:
        name:
          type: string
        operationType:
          type: string
          enum:
            - ADD
            - REMOVE
    TestCase:
      title: TestCase
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/UserInfo'
        components:
          type: array
          items:
            $ref: '#/components/schemas/JiraComponent'
        createDate:
          type: integer
          format: int64
        createdBy:
          $ref: '#/components/schemas/UserInfo'
        dataset:
          $ref: '#/components/schemas/AbstractEntityResponse'
        datasetStorage:
          $ref: '#/components/schemas/AbstractEntityResponse'
        description:
          type: string
        groupId:
          type: string
          format: uuid
        jiraTicket:
          type: string
        jiraTicketUrl:
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        lastModifiedBy:
          $ref: '#/components/schemas/UserInfo'
        lastRun:
          type: string
          format: uuid
        lastRunStatus:
          type: string
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        priority:
          type: string
          enum:
            - BLOCKER
            - CRITICAL
            - LOW
            - MAJOR
            - NORMAL
        status:
          type: string
          enum:
            - BLOCKED
            - CANCELLED
            - FAILED
            - IN_PROGRESS
            - NOT_DELIVERED
            - OPEN
            - PASSED
            - PASSED_WITH_MINOR_DEFECTS
        testScenario:
          $ref: '#/components/schemas/TestScenario'
        testScopes:
          type: array
          items:
            $ref: '#/components/schemas/TestScope'
        uuid:
          type: string
          format: uuid
        logCollectorTemplateId:
          type: string
          format: uuid
    TestCaseGroups:
      title: TestCaseGroup
      type: object
      properties:
        cases:
          type: array
          items:
            $ref: '#/components/schemas/TestCase'
        childGroups:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseGroups'
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        parentGroupId:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
    TestCaseGroup:
      title: TestCaseGroup
      type: object
      properties:
        childrenOperations:
          type: array
          items:
            $ref: '#/components/schemas/ObjectOperation'
        createdBy:
          $ref: '#/components/schemas/UserInfo'
        createdWhen:
          type: string
          format: date-time
        description:
          type: string
        modifiedBy:
          $ref: '#/components/schemas/UserInfo'
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        parentGroupId:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        testPlanId:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
    TestCaseGroupPatchRequest:
      title: TestCaseGroupPatchRequest
      type: object
      properties:
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
    TestCaseGroupResponse:
      title: TestCaseGroupResponse
      type: object
      properties:
        caseGroups:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseGroups'
        emptyGroupCases:
          type: array
          items:
            $ref: '#/components/schemas/TestCase'
    TestScenario:
      title: TestScenario
      type: object
      properties:
        alsoCompound:
          type: boolean
        createdBy:
          $ref: '#/components/schemas/UserInfo'
        createdWhen:
          type: string
          format: date-time
        description:
          type: string
        groupUuid:
          type: string
          format: uuid
        lastEdit:
          type: integer
          format: int64
        metainfo:
          type: array
          items:
            $ref: '#/components/schemas/MetaInfo'
        modifiedBy:
          $ref: '#/components/schemas/UserInfo'
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        projectUuid:
          type: string
          format: uuid
        testPlanUuid:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - COMPOUND
            - TESTSCENARIO
        uuid:
          type: string
          format: uuid
    TestScope:
      title: TestScope
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/UserInfo'
        createdWhen:
          type: string
          format: date-time
        description:
          type: string
        environmentUuid:
          type: string
          format: uuid
        executionCases:
          type: array
          items:
            type: string
            format: uuid
        flags:
          type: array
          items:
            type: string
            enum:
              - COLLECT_LOGS
              - COLLECT_LOGS_ON_FAIL
              - COLLECT_LOGS_ON_SKIPPED
              - COLLECT_LOGS_ON_WARNING
              - DO_NOT_PASS_INITIAL_CONTEXT
              - EXECUTE_ANYWAY
              - FAIL_IMMEDIATELY
              - IGNORE_PREREQUISITE_IN_PASS_RATE
              - IGNORE_VALIDATION_IN_PASS_RATE
              - INVERT_RESULT
              - SKIP
              - SKIP_IF_DEPENDENCIES_FAIL
              - STOP_ON_FAIL
              - SKIP_ON_PASS
              - TERMINATE_IF_FAIL
              - TERMINATE_IF_PREREQUISITE_FAIL
              - COLLECT_SSM_METRICS_ON_FAIL
        groupUuid:
          type: string
          format: uuid
        modifiedBy:
          $ref: '#/components/schemas/UserInfo'
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        numberOfThreshold:
          type: integer
          format: int32
        prerequisitesCases:
          type: array
          items:
            type: string
            format: uuid
        projectUuid:
          type: string
          format: uuid
        solutionBuild:
          type: array
          items:
            type: string
        systemUnderTestHost:
          type: array
          items:
            type: string
        taToolsUuid:
          type: string
          format: uuid
        testPlanUuid:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
        validationCases:
          type: array
          items:
            type: string
            format: uuid
        widgetConfigTemplateId:
          type: string
          format: uuid
    UserInfo:
      title: UserInfo
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
    GroupTreeResponse:
      title: GroupTreeResponse
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    Group:
      title: Group
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/Group'
