openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  version: '1.0'
servers:
  - url: 'http://localhost:8080'
    description: Inferred Url
tags:
  - name: process-controller
    description: Process Controller
paths:
  /api/v1/processorchestrator/flow:
    post:
      tags:
        - process-controller
      summary: Create new process via Dealer or Exists Engine
      operationId: executeProcessViaDealer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowExecutionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/processorchestrator/flow/bpmn:
    post:
      tags:
        - process-controller
      summary: Create new process via Dealer or Exists Engine
      operationId: executeProcessViaDynamicBpmnGeneration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowExecutionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/processorchestrator/flow/er/process/rerun:
    post:
      tags:
        - process-controller
      summary: Restart ER with selected TR ids activity
      operationId: rerunExecutionRequestProcess
      parameters:
        - name: newExecuteRequestId
          in: query
          description: newExecuteRequestId
          required: false
          style: form
          schema:
            type: string
            format: uuid
        - name: authorization
          in: header
          description: authorization
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerunExecutionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/processorchestrator/flow/er/process/restart:
    post:
      tags:
        - process-controller
      summary: Restart ER process
      operationId: restartProcess
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/v1/processorchestrator/flow/er/process/restart/{uuid}':
    post:
      tags:
        - process-controller
      summary: Restart ER with selected TR ids activity
      operationId: rerunTestRunsProcess
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: Authorization
          in: header
          description: Authorization
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/processorchestrator/flow/er/process/resume:
    post:
      tags:
        - process-controller
      summary: Resume ER process
      operationId: resumeProcess
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/processorchestrator/flow/er/process/stop:
    post:
      tags:
        - process-controller
      summary: Stop ER process
      operationId: stopProcess
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/processorchestrator/flow/er/process/terminate:
    post:
      tags:
        - process-controller
      summary: Terminate ER process
      operationId: terminateProcess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateRequest'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/v1/processorchestrator/flow/er/{executionRequestId}/process/id':
    get:
      tags:
        - process-controller
      summary: Get runner process id by execution request
      operationId: getRunnerProcessIdByExecutionRequestId
      parameters:
        - name: executionRequestId
          in: path
          description: executionRequestId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/processorchestrator/flow/order:
    post:
      tags:
        - process-controller
      summary: Create new process via Dealer or Exists Engine
      operationId: executeOrder
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionOrder'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/processorchestrator/flow/store:
    post:
      tags:
        - process-controller
      summary: Store Execution Order to Orchestrator Database
      operationId: storeExecutionOrder
      parameters:
        - name: authorization
          in: header
          description: authorization
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionOrder'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/processorchestrator/flow/tr/process/restart:
    post:
      tags:
        - process-controller
      summary: Restart TR activity
      operationId: restartTestRunProcess
      parameters:
        - name: executionRequestId
          in: query
          description: executionRequestId
          required: true
          style: form
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/processorchestrator/flow/tr/process/resume:
    post:
      tags:
        - process-controller
      summary: Resume TR activity
      operationId: resumeTestRunProcess
      parameters:
        - name: executionRequestId
          in: query
          description: executionRequestId
          required: true
          style: form
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/processorchestrator/flow/tr/process/stop:
    post:
      tags:
        - process-controller
      summary: Stop TR activity
      operationId: stopTestRunProcess
      parameters:
        - name: executionRequestId
          in: query
          description: executionRequestId
          required: true
          style: form
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/processorchestrator/flow/tr/process/terminate:
    post:
      tags:
        - process-controller
      summary: Terminate TR activity
      operationId: terminateTestRunProcess
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    ActionEntity:
      title: ActionEntity
      type: object
      properties:
        engineType:
          $ref: '#/components/schemas/EngineType'
        id:
          type: string
          format: uuid
        name:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
        type:
          $ref: '#/components/schemas/ActionEntityType'
    EngineType:
      type: string
      enum:
        - BV
        - EXECUTOR
        - ITFACTION
        - ITFCALLCHAIN
        - ITFWARMUP
        - NEWMAN_RUNNER
        - ITF_LITE
    ActionEntityType:
      type: string
      enum:
        - BV
        - COMPOUND
        - ITF
        - MIA
        - NEWMAN
        - R_B_M
        - REST
        - SQL
        - SSH
        - TECHNICAL
        - UI
        - ITF_LITE
    ActionParameter:
      title: ActionParameter
      type: object
      properties:
        complexParam:
          $ref: '#/components/schemas/ComplexActionParameter'
        name:
          type: string
        prefix:
          type: string
        value:
          type: string
    ComplexActionParameter:
      title: ComplexActionParameter
      type: object
      properties:
        arrayParams:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
        mapParams:
          type: array
          items:
            $ref: '#/components/schemas/MapActionParameter'
        type:
          type: string
          enum:
            - ARRAY
            - MAP
    Directive:
      title: Directive
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
    Engine:
      title: Engine
      type: object
      properties:
        bvUrl:
          type: string
        dealerRequest:
          type: string
        dealerUrl:
          type: string
        engineUrl:
          type: string
        itfUrl:
          type: string
        newmanRunnerUrl:
          type: string
    EnrichedCase:
      title: EnrichedCase
      required:
        - name
      type: object
      properties:
        compounds:
          type: array
          items:
            $ref: '#/components/schemas/EnrichedCompound'
        context:
          $ref: '#/components/schemas/TestCaseContext'
        dataSetId:
          type: string
          format: uuid
        dataSetStorageId:
          type: string
          format: uuid
        dependsOn:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseDependency'
        flags:
          type: array
          items:
            $ref: '#/components/schemas/Flag'
        id:
          type: string
          format: uuid
        initialTestRunId:
          type: string
          format: uuid
        isIgnored:
          type: boolean
        labelIds:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        lineNumber:
          type: integer
          format: int32
        logCollectorRequest:
          $ref: '#/components/schemas/LogCollectorRequest'
        name:
          type: string
        parentId:
          type: string
          format: uuid
        testScenarioId:
          type: string
          format: uuid
        scenarioHashSum:
          type: string
        testCaseRepeatCounts:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseRepeatCount'
        testScenarioName:
          type: string
    Flag:
      type: string
      enum:
        - COLLECT_LOGS
        - COLLECT_LOGS_ON_BLOCKED
        - COLLECT_LOGS_ON_FAIL
        - COLLECT_LOGS_ON_SKIPPED
        - COLLECT_LOGS_ON_WARNING
        - DO_NOT_PASS_INITIAL_CONTEXT
        - EXECUTE_ANYWAY
        - FAIL_IMMEDIATELY
        - IGNORE_PREREQUISITE_IN_PASS_RATE
        - IGNORE_VALIDATION_IN_PASS_RATE
        - INVERT_RESULT
        - SKIP
        - SKIP_IF_DEPENDENCIES_FAIL
        - STOP_ON_FAIL
        - SKIP_ON_PASS
        - TERMINATE_IF_FAIL
        - TERMINATE_IF_PREREQUISITE_FAIL
        - COLLECT_SSM_METRICS_ON_FAIL
    EnrichedCompound:
      title: EnrichedCompound
      required:
        - content
      type: object
      properties:
        childCompounds:
          type: array
          items:
            $ref: '#/components/schemas/EnrichedCompound'
        comment:
          type: string
        content:
          type: string
        deprecated:
          type: boolean
        directives:
          type: array
          items:
            $ref: '#/components/schemas/Directive'
        entity:
          $ref: '#/components/schemas/ActionEntity'
        flags:
          type: array
          items:
            $ref: '#/components/schemas/Flag'
        hidden:
          type: boolean
        id:
          type: string
          format: uuid
        lineNumber:
          type: integer
          format: int32
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ActionParameter'
        scenarioHashSum:
          type: string
        systemId:
          type: string
          format: uuid
        timeout:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/ActionEntityType'
    EnrichedScope:
      title: EnrichedScope
      type: object
      properties:
        context:
          type: string
          format: uuid
          additionalProperties:
            type: object
            additionalProperties:
              type: object
        scenarios:
          type: string
          format: uuid
          additionalProperties:
            $ref: '#/components/schemas/EnrichedScenario'
        execution:
          type: array
          items:
            $ref: '#/components/schemas/EnrichedCase'
        flags:
          type: array
          items:
            $ref: '#/components/schemas/Flag'
        id:
          type: string
          format: uuid
        logCollectorRequest:
          $ref: '#/components/schemas/LogCollectorRequest'
        name:
          type: string
        prerequisites:
          type: array
          items:
            $ref: '#/components/schemas/EnrichedCase'
        validation:
          type: array
          items:
            $ref: '#/components/schemas/EnrichedCase'
    ExecutionOrder:
      title: ExecutionOrder
      required:
        - name
        - projectId
        - projectName
        - scope
        - testPlanId
        - testPlanName
      type: object
      properties:
        autoSyncCasesWithJira:
          type: boolean
        autoSyncRunsWithJira:
          type: boolean
        contextVariables:
          type: string
          additionalProperties:
            type: object
        dataSetId:
          type: string
          format: uuid
        dataSetStorageId:
          type: string
          format: uuid
        emailSubject:
          type: string
        emailTemplateId:
          type: string
          format: uuid
        environmentId:
          type: array
          items:
            type: string
            format: uuid
        executionRequests:
          type: array
          items:
            $ref: '#/components/schemas/ExecutionRequestInfo'
        executor:
          type: string
        executorId:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        labelTemplateId:
          type: string
          format: uuid
        logCollectorTemplateId:
          type: string
          format: uuid
        missionControlToolUrl:
          type: string
        monitoringToolUrl:
          type: string
        name:
          type: string
        projectId:
          type: string
          format: uuid
        projectName:
          type: string
        recipients:
          type: array
          items:
            type: string
        isMandatoryCheck:
          type: boolean
        isSsmCheck:
          type: boolean
        isIgnoreFailedChecks:
          type: boolean
        scope:
          $ref: '#/components/schemas/EnrichedScope'
        taToolGroupId:
          type: array
          items:
            type: string
            format: uuid
        testPlanId:
          type: string
          format: uuid
        testPlanName:
          type: string
        testingStrategy:
          $ref: '#/components/schemas/TestingStrategy'
        threadCount:
          type: integer
          format: int32
        tshooterUrl:
          type: string
        widgetConfigTemplateId:
          type: string
          format: uuid
        virtual:
          type: boolean
    TerminateRequest:
      title: TerminateRequest
      type: object
      properties:
        executionRequestIds:
          type: array
          items:
            type: string
            format: uuid
        isGracefully:
          type: boolean
    ExecutionRequestInfo:
      title: ExecutionRequestInfo
      type: object
      properties:
        environmentId:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        name:
          type: string
        taToolGroupId:
          type: string
          format: uuid
    FlowExecutionRequest:
      title: FlowExecutionRequest
      required:
        - engine
        - environmentId
        - executionRequestName
        - projectId
        - projectName
        - scope
        - testPlanId
        - testPlanName
        - testRunName
        - testSuiteName
      type: object
      properties:
        autoSyncCasesWithJira:
          type: boolean
        autoSyncRunsWithJira:
          type: boolean
        contextVariables:
          type: object
        dataSetId:
          type: string
          format: uuid
        dataSetStorageId:
          type: string
          format: uuid
        emailSubject:
          type: string
        emailTemplateId:
          type: string
          format: uuid
        emails:
          type: array
          items:
            type: string
        engine:
          $ref: '#/components/schemas/Engine'
        environmentId:
          type: string
          format: uuid
        executionRequestId:
          type: string
          format: uuid
        executionRequestName:
          type: string
        executor:
          type: string
        executorId:
          type: string
          format: uuid
        itfTestRunId:
          type: number
          format: biginteger
        labelTemplateId:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        projectName:
          type: string
        scope:
          $ref: '#/components/schemas/EnrichedScope'
        systems:
          type: array
          items:
            $ref: '#/components/schemas/System'
        taSystems:
          type: array
          items:
            $ref: '#/components/schemas/System'
        taToolsGroupId:
          type: string
          format: uuid
        testPlanId:
          type: string
          format: uuid
        testPlanName:
          type: string
        testRunId:
          type: string
          format: uuid
        testRunName:
          type: string
        testSuiteName:
          type: string
        threadCount:
          type: integer
          format: int32
        toolsInfo:
          type: object
          additionalProperties:
            type: string
        widgetConfigTemplateId:
          type: string
          format: uuid
    LogCollectorRequest:
      title: LogCollectorRequest
      type: object
      properties:
        body:
          type: string
        endpoint:
          type: string
        resultJsonPath:
          type: string
    MapActionParameter:
      title: MapActionParameter
      type: object
      properties:
        paramKey:
          $ref: '#/components/schemas/ActionParameter'
        paramValue:
          $ref: '#/components/schemas/ActionParameter'
    RerunExecutionRequest:
      title: RerunExecutionRequest
      type: object
      properties:
        emailRecipients:
          type: array
          items:
            type: string
        environmentId:
          type: string
          format: uuid
        executionRequestId:
          type: string
          format: uuid
        scopeId:
          type: string
          format: uuid
        taToolsGroupId:
          type: string
          format: uuid
        testRunIds:
          type: array
          items:
            type: string
            format: uuid
        threads:
          type: integer
          format: int32
    System:
      title: System
      type: object
      properties:
        connections:
          type: array
          items:
            type: string
            format: uuid
        created:
          type: string
          format: date-time
        createdBy:
          type: string
        description:
          type: string
        environmentId:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        modified:
          type: string
          format: date-time
        modifiedBy:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - FAIL
            - NOTHING
            - PASS
            - WARN
        systemCategoryId:
          type: string
          format: uuid
        version:
          type: string
    TestCaseContext:
      title: TestCaseContext
      type: object
      properties:
        datasetListId:
          type: string
          format: uuid
        fullContext:
          type: object
          additionalProperties:
            type: object
        iterationContext:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
    TestCaseDependency:
      title: TestCaseDependency
      type: object
      properties:
        testCaseId:
          type: string
          format: uuid
        testScopeId:
          type: string
          format: uuid
    TestCaseRepeatCount:
      title: TestCaseRepeatCount
      type: object
      properties:
        repeatCount:
          type: integer
          format: int32
        testScopeId:
          type: string
          format: uuid
    TestingStrategy:
      title: TestingStrategy
      type: object
      properties:
        executeExecution:
          type: boolean
        executePrerequisites:
          type: boolean
        executeValidation:
          type: boolean
        testCaseIds:
          type: array
          items:
            type: string
            format: uuid
        testScopeId:
          type: string
          format: uuid
        filteredByLabels:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    EnrichedScenario:
      title: EnrichedScenario
      type: object
      properties:
        testScenarioId:
          type: string
          format: uuid
        testScenarioName:
          type: string
        compounds:
          type: array
          items:
            $ref: '#/components/schemas/EnrichedCompound'
