openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  version: '1.0'
servers:
  - url: 'http://localhost:8080'
    description: Inferred Url
tags:
  - name: data-set-controller
    description: Data Set Controller
paths:
  /ds:
    get:
      tags:
        - data-set-controller
      summary: Returns all dataSets.
      operationId: getDataSets
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataSet'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /ds/affected/by:
    get:
      tags:
        - data-set-controller
      summary: Returns all affected datasets by changes at attribute.
      operationId: getDatasetsOrTableResponseAffectedByChangeParameterValue
      parameters:
        - name: dataSetId
          in: query
          description: dataSetId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: attributeId
          in: query
          description: attributeId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: full
          in: query
          description: full
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /ds/dsReferenceId/affected/by:
    get:
      tags:
        - data-set-controller
      summary: Returns all affected dataSets by changes at reference value.
      operationId: getAffectedDataSetsByChangesDataSetReference
      parameters:
        - name: dsReferenceId
          in: query
          description: dsReferenceId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: full
          in: query
          description: full
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /ds/find-name-pagination:
    get:
      tags:
        - data-set-controller
      summary: Returns all dataSets.
      operationId: getDataSetsByName
      parameters:
        - name: name
          in: query
          description: name
          required: true
          style: form
          schema:
            type: string
        - name: offset
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: pageNumber
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: paged
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: sort.sorted
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: sort.unsorted
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: unpaged
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: projectId
          in: query
          description: projectId
          required: true
          style: form
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PageAbstractEntityResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /ds/parent/path:
    get:
      tags:
        - data-set-controller
      summary: returns visibility area and data set list ids
      operationId: getPath
      parameters:
        - name: dsId
          in: query
          description: dsId
          required: true
          style: form
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PairOfUUidAndInt'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /ds/reset/affected/by:
    post:
      tags:
        - data-set-controller
      summary: 'Reset all selected datasets, at changed attribute'
      operationId: restAffectedDatasetsByChangesAttribute
      parameters:
        - name: attributeId
          in: query
          description: attributeId
          required: false
          style: form
          schema:
            type: string
            format: uuid
        - name: dataSetListId
          in: query
          description: dataSetListId
          required: false
          style: form
          schema:
            type: string
            format: uuid
        - name: modifiedWhen
          in: query
          description: modifiedWhen
          required: false
          style: form
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /ds/reset/by:
    post:
      tags:
        - data-set-controller
      summary: 'Reset all selected datasets, at changed attribute. dataSetIds is ids of datasets in which we want to reset overridden parameters with attributeId provided'
      operationId: resetOverriddenParameter
      parameters:
        - name: dataSetId
          in: query
          description: dataSetId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: targetAttrId
          in: query
          description: targetAttrId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: dataSetListId
          in: query
          description: dataSetListId
          required: false
          style: form
          schema:
            type: string
            format: uuid
        - name: modifiedWhen
          in: query
          description: modifiedWhen
          required: false
          style: form
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Parameter'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /ds/restore:
    post:
      tags:
        - data-set-controller
      summary: restore
      operationId: restore
      parameters:
        - name: dataSetListId
          in: query
          description: dataSetListId
          required: false
          style: form
          schema:
            type: string
            format: uuid
        - name: modifiedWhen
          in: query
          description: modifiedWhen
          required: false
          style: form
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}':
    get:
      tags:
        - data-set-controller
      summary: Returns dataSet by id.
      operationId: getDataSetById
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - data-set-controller
      summary: Renames DS.
      operationId: rename
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          description: name
          required: true
          style: form
          schema:
            type: string
        - name: dataSetListId
          in: query
          description: dataSetListId
          required: false
          style: form
          schema:
            type: string
            format: uuid
        - name: modifiedWhen
          in: query
          description: modifiedWhen
          required: false
          style: form
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - data-set-controller
      summary: Deletes selected DS.
      operationId: delete
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: dataSetListId
          in: query
          description: dataSetListId
          required: false
          style: form
          schema:
            type: string
            format: uuid
        - name: modifiedWhen
          in: query
          description: modifiedWhen
          required: false
          style: form
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/ds/{dataSetId}/atp':
    post:
      tags:
        - data-set-controller
      summary: Returns dataSet by id in ITF format + atp macros
      operationId: getAtpContextFull
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: evaluate
          in: query
          description: evaluate
          required: false
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DataSetTree'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/atp/bulk':
    post:
      tags:
        - data-set-controller
      summary: Returns dataSet by id in ITF format + atp macros
      operationId: getAtpContextFullBulk
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: evaluate
          in: query
          description: evaluate
          required: false
          style: form
          schema:
            type: string
        - name: countOfEvaluates
          in: query
          description: countOfEvaluates
          required: false
          style: form
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/atp/object':
    post:
      tags:
        - data-set-controller
      summary: Returns dataSet by id in ITF format + atp macros
      operationId: getAtpContextObject
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: evaluate
          in: query
          description: evaluate
          required: false
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DataSetTree'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/atp/object/bulk':
    post:
      tags:
        - data-set-controller
      summary: Returns dataSet by id in ITF format + atp macros
      operationId: getAtpContextObjectBulk
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: evaluate
          in: query
          description: evaluate
          required: false
          style: form
          schema:
            type: string
        - name: countOfEvaluates
          in: query
          description: countOfEvaluates
          required: false
          style: form
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/atp/objectExtended':
    post:
      tags:
        - data-set-controller
      summary: Returns dataSet by id in ATP format + atp macros
      operationId: getAtpContextObjectExtended
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: evaluate
          in: query
          description: evaluate
          required: false
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DataSetTree'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/atp/optimized':
    post:
      tags:
        - data-set-controller
      summary: Returns dataSet by id in ITF format + atp macros
      operationId: getAtpContextOptimized
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: evaluate
          in: query
          description: evaluate
          required: false
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DataSetTree'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/atp/optimized/bulk':
    post:
      tags:
        - data-set-controller
      summary: Returns dataSet by id in ITF format + atp macros
      operationId: getAtpContextOptimizedBulk
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: evaluate
          in: query
          description: evaluate
          required: false
          style: form
          schema:
            type: string
        - name: countOfEvaluates
          in: query
          description: countOfEvaluates
          required: false
          style: form
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/copy':
    put:
      tags:
        - data-set-controller
      summary: Copy DS with name provided.
      operationId: copy
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          description: name
          required: true
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: string
                format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/itf':
    get:
      tags:
        - data-set-controller
      summary: Returns dataSet by id in ITF format + atp macros
      operationId: getItfContext
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/label':
    get:
      tags:
        - data-set-controller
      summary: getLabels
      operationId: getLabels
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Label'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - data-set-controller
      summary: addLabel
      operationId: addLabel
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          description: name
          required: true
          style: form
          schema:
            type: string
        - name: dataSetListId
          in: query
          description: dataSetListId
          required: false
          style: form
          schema:
            type: string
            format: uuid
        - name: modifiedWhen
          in: query
          description: modifiedWhen
          required: false
          style: form
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Label'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/label/{labelId}':
    delete:
      tags:
        - data-set-controller
      summary: deleteLabel
      operationId: deleteLabel
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: labelId
          in: path
          description: labelId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: dataSetListId
          in: query
          description: dataSetListId
          required: false
          style: form
          schema:
            type: string
            format: uuid
        - name: modifiedWhen
          in: query
          description: modifiedWhen
          required: false
          style: form
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/ds/{dataSetId}/legacy/atp':
    post:
      tags:
        - data-set-controller
      summary: Returns dataSet by id in ITF format + atp macros
      operationId: getDataSetsForAtp
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
        - name: evaluate
          in: query
          description: evaluate
          required: false
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/legacy/itf':
    get:
      tags:
        - data-set-controller
      summary: 'Returns dataSet by id in ITF format: {attribute = parameter, attribute2 : {attribute = parameter2}}.'
      operationId: getInItfFormat
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/parameters':
    post:
      tags:
        - data-set-controller
      summary: getUiAttribute
      operationId: getUiAttribute
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: evaluate
          in: query
          description: evaluate
          required: false
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UiManAttribute'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/position':
    post:
      tags:
        - data-set-controller
      summary: Creates new list values for provided attribute by text.
      operationId: setPosition
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              format: int32
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetListId}/ds':
    put:
      tags:
        - data-set-controller
      summary: Creates new DS with name provided.
      operationId: create
      parameters:
        - name: dataSetListId
          in: path
          description: dataSetListId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          description: name
          required: true
          style: form
          schema:
            type: string
        - name: modifiedWhen
          in: query
          description: modifiedWhen
          required: false
          style: form
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: string
                format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetListId}/short':
    get:
      tags:
        - data-set-controller
      summary: Returns list of Datasets (id + name) for selected DSL.
      operationId: getDataSetsShort
      parameters:
        - name: dataSetListId
          in: path
          description: dataSetListId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectShortResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/affectedDatasets':
    get:
      tags:
        - data-set-controller
      summary: Returns all affected dataSets by specified reference with pagination support.
      operationId: getAffectedDataSets
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TableResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/{dataSetId}/affectedDatasetsCount':
    get:
      tags:
        - data-set-controller
      summary: Returns all affected dataSets count by specified reference.
      operationId: getAffectedDataSetsCount
      parameters:
        - name: dataSetId
          in: path
          description: dataSetId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: number
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/lock/update':
    post:
      tags:
        - data-set-controller
      summary: Lock DS from change.
      operationId: Lock
      parameters:
        - name: dataSetListId
          in: query
          description: dataSetListId
          required: true
          style: form
          schema:
            type: string
            format: uuid
        - name: locked
          in: query
          description: locked ds flag
          required: true
          style: form
          schema:
            type: string
            format: boolean
        - name: modifiedWhen
          in: query
          description: modifiedWhen
          required: false
          style: form
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/ds/listOfDatasets':
    post:
      tags:
        - data-set-controller
      summary: Returns dataSets by id-s.
      operationId: getDataSetsByIds
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataSet'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    AbstractEntityResponse:
      title: AbstractEntityResponse
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    AbstractParameter:
      title: AbstractParameter
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AttributeType'
        value:
          type: string
    AttributeType:
      type: string
      enum:
        - CHANGE
        - DSL
        - ENCRYPTED
        - FILE
        - LIST
        - TEXT
    Attribute:
      title: Attribute
      required:
        - dataSetList
        - id
        - name
        - type
      type: object
      properties:
        dataSetList:
          description: parent
          $ref: '#/components/schemas/DataSetList'
        dataSetListReference:
          description: for dsl type
          $ref: '#/components/schemas/DataSetList'
        id:
          type: string
          format: uuid
        listValues:
          type: array
          description: for list type
          items:
            $ref: '#/components/schemas/ListValue'
        name:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        type:
          $ref: '#/components/schemas/AttributeType'
    DataSet:
      title: DataSet
      type: object
    DataSetGroup:
      title: DataSetGroup
      type: object
      properties:
        dataSetId:
          type: string
          format: uuid
        dsl:
          type: string
        groups:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DataSetGroup'
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractParameter'
        type:
          $ref: '#/components/schemas/AttributeType'
        value:
          type: string
    DataSetList:
      title: DataSetList
      required:
        - id
        - name
        - visibilityArea
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        createdBy:
          type: string
          format: uuid
        createdWhen:
          type: string
          format: date-time
        dataSets:
          type: array
          items:
            $ref: '#/components/schemas/DataSet'
        id:
          type: string
          format: uuid
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        modifiedBy:
          type: string
          format: uuid
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        testPlan:
          $ref: '#/components/schemas/TestPlan'
        visibilityArea:
          description: parent
          $ref: '#/components/schemas/VisibilityArea'
    DataSetTree:
      title: DataSetTree
      type: object
      properties:
        groups:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DataSetGroup'
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractParameter'
    FileData:
      title: FileData
      type: object
      properties:
        contentType:
          type: string
        fileName:
          type: string
        fileType:
          type: string
        parameterUuid:
          type: string
          format: uuid
        url:
          type: string
    JsonNode:
      title: JsonNode
      type: object
    Label:
      title: Label
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    ListValue:
      title: ListValue
      required:
        - attribute
        - id
        - name
      type: object
      properties:
        attribute:
          description: parent
          $ref: '#/components/schemas/Attribute'
        id:
          type: string
          format: uuid
        name:
          type: string
    ObjectShortResponse:
      title: ObjectShortResponse
      type: object
      properties:
        dataSetId:
          type: string
          format: uuid
        dataSetName:
          type: string
        locked:
          type: string
          format: boolean
    Pageable:
      title: Pageable
      type: object
      properties:
        offset:
          type: integer
          format: int64
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        sort:
          $ref: '#/components/schemas/Sort'
        unpaged:
          type: boolean
    PageAbstractEntityResponse:
      title: PageAbstractEntityResponse
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/AbstractEntityResponse'
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PairOfUUidAndInt:
      title: PairOfUUidAndInt
      type: object
      properties:
        first:
          type: string
          format: uuid
        second:
          type: string
          format: uuid
    Parameter:
      title: Parameter
      required:
        - attribute
        - dataSet
        - id
      type: object
      properties:
        attribute:
          description: parent
          $ref: '#/components/schemas/Attribute'
        dataSet:
          description: parent
          $ref: '#/components/schemas/DataSet'
        dataSetReference:
          description: for attribute with dsl type
          $ref: '#/components/schemas/DataSet'
        fileData:
          $ref: '#/components/schemas/FileData'
        id:
          type: string
          format: uuid
        listValue:
          description: for attribute with list type
          $ref: '#/components/schemas/ListValue'
        text:
          type: string
          description: for attribute with text type
    Sort:
      title: Sort
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    StreamingResponseBody:
      title: StreamingResponseBody
      type: object
    TestPlan:
      title: TestPlan
      required:
        - id
        - name
        - visibilityArea
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        visibilityArea:
          $ref: '#/components/schemas/VisibilityArea'
    UiManAttribute:
      title: UiManAttribute
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/UiManAttribute'
        dataSetListReference:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        name:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/UiManParameter'
        type:
          $ref: '#/components/schemas/AttributeType'
    UiManParameter:
      title: UiManParameter
      type: object
      properties:
        dataSet:
          type: string
          format: uuid
        overlap:
          type: boolean
        value:
          type: object
        valueRef:
          type: object
    VisibilityArea:
      title: VisibilityArea
      required:
        - id
        - name
      type: object
      properties:
        dataSetLists:
          type: array
          items:
            $ref: '#/components/schemas/DataSetList'
        id:
          type: string
          format: uuid
        name:
          type: string
    TableResponse:
      title: TableResponse
      type: object
      properties:
        id:
          type: string
          format: uuid
        dslId:
          type: string
          format: uuid
        dslName:
          type: string
        dsId:
          type: string
          format: uuid
        dsName:
          type: string
        attributeId:
          type: string
          format: uuid
        attributeName:
          type: string
        listValueId:
          type: string
          format: uuid
        ds:
          type: string
          format: uuid
